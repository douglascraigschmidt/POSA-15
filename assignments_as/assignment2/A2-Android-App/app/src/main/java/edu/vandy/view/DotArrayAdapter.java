package edu.vandy.view;

import java.util.List;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import edu.vandy.R;
import edu.vandy.view.DotArrayAdapter.DotColor;

/**
 * An ArrayAdapter that takes list of Color enums and adapts it to a
 * ListView so that the list appears as a series of green, yellow, or
 * red dots.  The supplied layout for inflation must contain an
 * ImageView with the id "dot".
 */
public class DotArrayAdapter 
       extends ArrayAdapter<DotColor> {
    /**
     * The enum used to determine which color the dot should be.
     */
    public enum DotColor {
        GREEN,  // Available 
        YELLOW, // Idle
        RED,    // Waiting or in-use
        GRAY,   // Not yet started or done
        PURPLE  // Interrupted
    }
	
    /**
     * The id of the resource of the layout we will use to create an
     * item in our ListView.  This value is defined in R (a gen file)
     * and generated by parsing the xml files in /res.
     */
    private int mResource;

    /**
     * The constructor initializes the fields.
     *
     * @param Context
     *            A context to retrieve the resources from
     * @param textViewResourceId
     *            Which resource to instantiate
     * @param dots
     *           The list of objects to display as a list in the GUI.
     */
    public DotArrayAdapter(Context context,
                           int textViewResourceId,
                           List<DotColor> dots) {
        super(context,
              textViewResourceId,
              dots);

        mResource = textViewResourceId;
    }

    /**
     * Convert one of the objects in our list into a view to be
     * displayed on the GUI.
     * 
     * @param position
     *            The position of the object in our list.
     * @param convertView
     *            A view that may need to be recycled, rather than instantiating
     *            a new View (saves processing time).
     * @param parent
     *            The parent View that this View will be attached to.
     */
    @Override
    public View getView(int position,
                        View convertView,
                        ViewGroup parent) {
        final DotColor item = getItem(position);

        ViewHolder holder;

        // We have a view to convert, so use that instead
        if (convertView != null) {
            // Get the parts of this view that's already been
            // instantiated.
            holder = (ViewHolder) convertView.getTag();
        } else {
            // We don't have a view to convert, make one.
            convertView =
                LayoutInflater.from(getContext()).inflate(mResource,
                                                          parent,
                                                          false);
            holder = new ViewHolder();
            holder.dot = (ImageView)
                convertView.findViewById(R.id.dot);

            convertView.setTag(holder);
        }

        // Set the appropriate drawable. 
        switch (item) {
        case GREEN:
            holder.dot.setImageDrawable(getContext().getResources()
					.getDrawable(R.drawable.green_dot));
            break;
        case GRAY:
            holder.dot.setImageDrawable(getContext().getResources()
					.getDrawable(R.drawable.gray_dot));
            break;
        case PURPLE:
            holder.dot.setImageDrawable(getContext().getResources()
					.getDrawable(R.drawable.purple_dot));
            break;
        case YELLOW:
            holder.dot.setImageDrawable(getContext().getResources()
					.getDrawable(R.drawable.yellow_dot));
            break;
        case RED:
            holder.dot.setImageDrawable(getContext().getResources()
					.getDrawable(R.drawable.red_dot));
            break;
        }
        return convertView;
    }

    /**
     * Private class that holds the ImageView.
     */
    private class ViewHolder {
        ImageView dot;
    }
}
